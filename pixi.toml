[project]
name = "whole-body-estimators"
# As this version is currently ignored, we do not
# waste effort in mantain it in synch with the value
# specified in CMakeLists.txt
version = "0.0.0"
description = "YARP devices that implement estimators for humanoid robots."
authors = ["Silvio Traversaro <silvio@traversaro.it>"]
channels = ["conda-forge","robotology"]
platforms = ["linux-64", "win-64", "osx-64"]

# Workaround until https://gitlab.kitware.com/cmake/cmake/-/merge_requests/9200
# is released

[activation]
scripts = ["set_install_prefix.sh"]

[target.win-64.activation]
scripts = ["set_install_prefix.bat"]


[tasks]

download_yarp = { cmd = "git clone https://github.com/robotology/yarp .pixi_src_yarp && cd .pixi_src_yarp && git checkout e3ec363c0af7469fcb2c218c356844b8d6bbb1c5" }
download_icub_main = { cmd = "git clone https://github.com/robotology/icub-main .pixi_src_icub_main && cd .pixi_src_icub_main && git checkout v2.5.0" }
download_ergocub_software = { cmd = "git clone https://github.com/icub-tech-iit/ergocub-software .pixi_src_ergocub_software && cd .pixi_src_ergocub_software && git checkout v0.7.1" }
download_deps = {cmd = "echo Downloaded all deps", depends_on = ["download_yarp", "download_icub_main", "download_ergocub_software"]}

configure_yarp = { cmd = "cmake -DCMAKE_BUILD_TYPE=Release  -DYARP_COMPILE_ALL_FAKE_DEVICES:BOOL=ON -DCMAKE_INSTALL_PREFIX=$CMAKE_INSTALL_PREFIX -GNinja -S.pixi_src_yarp -B.build_yarp" }
build_yarp = { cmd = "cmake --build .build_yarp --config Release", depends_on = ["configure_yarp"] }
install_yarp = { cmd = ["cmake", "--install", ".build_yarp", "--config", "Release"], depends_on = ["build_yarp"] }
configure_icub_main = { cmd = "cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$CMAKE_INSTALL_PREFIX -GNinja -S.pixi_src_icub_main -B.build_icub_main", depends_on = "install_yarp" }
build_icub_main = { cmd = "cmake --build .build_icub_main --config Release", depends_on = ["configure_icub_main"] }
install_icub_main = { cmd = ["cmake", "--install", ".build_icub_main", "--config", "Release"], depends_on = ["build_icub_main"] }
configure_ergocub_software = { cmd = "cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$CMAKE_INSTALL_PREFIX -GNinja -S.pixi_src_ergocub_software -B.build_ergocub_software", depends_on = "install_yarp" }
build_ergocub_software = { cmd = "cmake --build .build_ergocub_software --config Release", depends_on = ["configure_ergocub_software"] }
install_ergocub_software = { cmd = ["cmake", "--install", ".build_ergocub_software", "--config", "Release"], depends_on = ["build_ergocub_software"] }
install_deps = {cmd = "echo Installed all deps", depends_on = ["install_yarp", "install_icub_main", "install_ergocub_software"]}


configure = { cmd = [
    "cmake",
    "-DCMAKE_BUILD_TYPE=Release",
    "-DCMAKE_INSTALL_PREFIX=$CMAKE_INSTALL_PREFIX",
    "-DBUILD_TESTING:BOOL=ON",
    # Use the cross-platform Ninja generator
    "-G",
    "Ninja",
    # The source is in the root directory
    "-S",
    ".",
    # We wanna build in the .build directory
    "-B",
    ".build",
]}

build = { cmd = "cmake --build .build --config Release", depends_on = ["configure"] }
test = { cmd = "ctest --test-dir .build --build-config Release", depends_on = ["build"] }
install = { cmd = ["cmake", "--install", ".build", "--config", "Release"], depends_on = ["build"] }
uninstall = { cmd = ["cmake", "--build", ".build", "--target", "uninstall"]}


[dependencies]
c-compiler = "*"
idyntree = "*"
cxx-compiler = "*"
ninja = "*"
pkg-config = "*"
eigen = "*"
# For tests
ace = "*"
ycm-cmake-modules = "*"
catch2 = "*"
tinyxml = "*"
